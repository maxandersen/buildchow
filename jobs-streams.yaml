- defaults:
    name: global
    jvm-memory: "-Xms512m -Xmx1024m -XX:PermSize=128m -XX:MaxPermSize=256m"
    tests-folder: tests # for some it is all-tests
    component-responsible: ""
    scm-schedule: H H/8 * * * # every 8 hours starting a random hour. Removes need for each job to configure it (http://htmlpreview.github.io/?https://github.com/jenkinsci/jenkins/blob/master/core/src/main/resources/hudson/triggers/TimerTrigger/help-spec.html)
    download-cache:  "$JENKINS_HOME/static_build_env/jbds/download-cache"
    maven-settings: "$JENKINS_HOME/../.m2/local-settings.xml" # need more reliable location
    # flags to use for reliable, tracable builds.
    # -V show version, -fae fail at end and -B run in batch mode to reduce noise and use defaults for any prompts
    # -U ensure it will check for updates (to get latest snapshots or previously missing releases)
    # -C check consistency of files and fail if failure to download instead of continuing.
    ci-maven-flags: "-V -fae -B -U -C"
    nodes: &nodes
      "(RHEL6||RHEL7||beaker||jboss-prod)&&!ia64&&!rhts"
    components: &components # an alias for components
      - aerogear:
          tests-folder: all-tests
      - arquillian
      - base: 
          tests-folder: all-tests
      - birt
      - browsersim
      - central:
          tests-folder: all-tests
      - forge
      - freemarker
      # - gwt
      - hibernate:
          component-responsible: "jenkinsmail@xam.dk"
      - javaee:
          tests-folder: all-tests
      - jst
      - livereload:
          component-responsible: "xcoulon@redhat.com"
      - openshift
      - portlet
      - server:
          test-folder: all-tests
      - vpe
      - webservices
    
- project:
    name: jbosstools-master  # 'project' for a certain stream
    stream:
      master
    target-platform-version: 4.50.0.Alpha1-SNAPSHOT
    target-platform-maximum: 4.50.0.Alpha1-SNAPSHOT
    
    branch:
      - master
    component: 
      *components
    jobs:
      - 'jbosstools-{component}_{stream}'
      - 'jbosstools-buildflow_{stream}'
          
- project:
    name: jbosstools-mars 
    stream:
      4.3.mars
    target-platform-version: 4.50.0.Alpha1-SNAPSHOT
    target-platform-maximum: 4.50.0.Alpha1-SNAPSHOT
    branch:
      - jbosstools-4.3.0.Alpha1x
    component: 
      *components  # reusing same component list but could use different one per stream if needed
    jobs:
      - 'jbosstools-{component}_{stream}'
      - 'jbosstools-buildflow_{stream}'
      
- job-template:
    name: 'jbosstools-buildflow_{stream}'
    description: 'Build Flow that replaces the need for job cascading and interlinkage. Runs weekly. See <a href="https://issues.jboss.org/browse/JBIDE-13307">JBIDE-13307</a>'
    logrotate:
      daysToKeep: -1
      numToKeep: 10
      artifactDaysToKeep: -1
      artifactNumToKeep: -1
    jdk: jdk1.7
    project-type: flow
    dsl: |
      parallel (
      {{ ignore(FAILURE) {{ build("jbosstools-aerogear_{stream}") }} }},
      {{ ignore(FAILURE) {{ build("jbosstools-base_{stream}") }} }}
      )
      parallel (
      {{ 
      parallel (
      // {{ ignore(FAILURE) {{ build("jbosstools-gwt_{stream}") }} }},
      {{ ignore(FAILURE) {{ build("jbosstools-forge_{stream}") }} }},
      // {{ ignore(FAILURE) {{ build("jbosstools-freemarker_{stream}") }} }}, // unchanged for master branch so far
      {{ 
      ignore(FAILURE)  {{ build("jbosstools-server_{stream}") }}
      parallel (
      {{ ignore(FAILURE) {{ build("jbosstools-livereload_{stream}") }} }},
      {{ ignore(FAILURE) {{ build("jbosstools-openshift_{stream}") }} }},
      {{ ignore(FAILURE) {{ build("jbosstools-webservices_{stream}") }} }}
        )
        }}
        ) 
        }},
        {{ 
        parallel (
        {{ 
        ignore(FAILURE) {{ build("jbosstools-hibernate_{stream}") }}
        // ignore(FAILURE) {{ build("jbosstools-birt_{stream}") }}
      }},
      {{
      // Xulrunner is disabled - no need to build it
      // build("xulrunner-1.9.2")
      ignore(FAILURE) {{ build("jbosstools-vpe_{stream}") }}
      ignore(FAILURE) {{ build("jbosstools-jst_{stream}") }}
      ignore(FAILURE) {{ build("jbosstools-browsersim_{stream}") }}
      }}
      ) 
      }}
      )
      ignore(FAILURE) {{ build("jbosstools-javaee_{stream}") }}
      // ignore(FAILURE) {{ build("jbosstools-portlet_{stream}") }} 
      ignore(FAILURE) {{ build("jbosstools-central_{stream}") }}
      ignore(FAILURE) {{ build("jbosstools-arquillian_{stream}") }}
      ignore(FAILURE) {{ build("jbosstools-composite-install_{stream}", skipDiffCheck: "true") }}
      // jbosstools-composite-install will kick off the following builds in order, with skipDiffCheck: "true" --&gt; skipRevisionCheckWhenPublishing: "true" (publish forced, where applicable)
      // --&gt; jbosstools-build-sites.aggregate.webtools-site
      // --&gt; jbosstools-build-sites.aggregate.site
      // --&gt; --&gt; jbosstools-build-sites.aggregate.coretests-site
      // --&gt; --&gt; devstudio.product
      // --&gt; --&gt; --&gt; jbosstools-discovery_41
      // --&gt; --&gt; --&gt; --&gt; jbosstools-install-grinder.install-tests.matrix

    triggers:
      - timed: "H H(0-9) * * H(6-7)"

- job-template:
    name: 'jbosstools-{component}_{stream}'
    description: |
      Nightly build for '<a href="https://github.com/jbosstools/jbosstools-{component}">jbosstools-{component}</a>', checking every 8 hrs for changes.
      <h2><a style="color:#FF9933" href="http://download.jboss.org/jbosstools/builds/cascade/">Build Job Cascade & Results</a></h2>
      <h3>job runs in this order: build against minimum target platform, publish to <a href="http://download.jboss.org/jbosstools/builds/staging/">staging</a>, test against maximum target platform</h3>
    node: *nodes
    logrotate:
      daysToKeep: -1
      numToKeep: 5
      artifactDaysToKeep: -1
      artifactNumToKeep: -1
    jdk: jdk1.7
     
    parameters:
      - string:
          # TODO: the docs for this flag should not suggest to mix lifecycle phases into the flags. If needed should be done separately.
          name: MAVEN_FLAGS
          default: "{ci-maven-flags} -Djbosstools-site-stream={stream} -P hudson,pack200,unified.target"
          description: |
            Pass in lifecycle phase and extra flags to Maven, such as:
              <dl>
                <dt>clean</dt><dd>clean before building *</dd>
                <dt>integration-test</dt><dd>build and test *</dd>
                <dt>install</dt><dd>build, test, and install into m2 repo *</dd>
                <dt>osgi-test:test</dt><dd>just (re-)run test(s)</dd>
                <dt>-P hudson</dt><dd>enable hudson build ID in feature/plugin qualifiers</dd>
                <dt>-Dmaven.test.skip</dt><dd>skip compiling and running tests</dd>
                <dt>-Dmaven.repo.local=${{WORKSPACE}}/m2-repository</dt><dd>path to local m2 repo</dd>
                <dt>-fae</dt><dd>fail at end</dd>
                <dt>-o</dt><dd>offline</dd>
                <dt>-B</dt><dd>batch (non-interactive) mode</dd>
                <dt>-U</dt><dd>check for updates</dd>
                <dt>-e</dt><dd>if error occurs, dump stack into console</dd>
                <dt>-q</dt><dd>quieter output</dd>
              </dl>
      - string:
          name: TARGET_PLATFORM_VERSION
          default: "{target-platform-version}"
          description: "Target platform used for building/compilation"
      - string:
          name: TARGET_PLATFORM_MAXIMUM
          default: "{target-platform-maximum}"
          description: "Target platform used for testing"
      - bool:
          name: skipRevisionCheckWhenPublishing
          default: "false"
          description: |
            Check box to always publish new build to staging / nightly. <br/>
            Unchecked, publish.sh will check previous build's revision to decide if this build needs <br/>
            to overwrite the previous one, or if it's in fact the same source &amp; therefore same binaries.<br/>
      - string:
          name: JAVA17
          default: jdk1.7.0_last
          description: |
              Variable used to define which version of JDK 7 to use in ${{NATIVE_TOOLS}}
      - string:
          name: JAVA18
          default: jdk1.8.0_last
          description: |
              Variable used to define which version of JDK 8 to use in ${{NATIVE_TOOLS}}

    properties:          
      - github:
          url: https://github.com/jbosstools/jbosstools-{component}
      - delivery-pipeline:
          stage: Dev
          task: Build {component}
          
    scm:
      - git:
          url: https://github.com/jbosstools/jbosstools-{component}
          wipe-workspace: false
          basedir: "sources"
          branches: 
            - '{branch}'
        
    triggers:
      - pollscm: "{scm-schedule}"

    builders:
      - shell: |
               echo Rob is awesome
               ls -l ${{NATIVE_TOOLS}}
      - maven-target:
          goals: "clean install ${{MAVEN_FLAGS}} -DTARGET_PLATFORM_VERSION=${{TARGET_PLATFORM_VERSION}}"
          maven-version: maven-3.2.5
          settings: "{maven-settings}"
          private-repository: true
          java-opts: 
            - "{jvm-memory}"
          properties: 
            - maven.test.skip=true
            - skipITests=true
            - download.cache.directory={download-cache}
            - JOB_NAME=${{JOB_NAME}}
            - BUILD_ID=${{BUILD_ID}}
            - BUILD_NUMBER=${{BUILD_NUMBER}}
            - skipPrivateRequirements=false
            - jbosstools.test.jre.5="${{NATIVE_TOOLS}}${{SEP}}${{JAVA15}}" 
            - jbosstools.test.jre.6="${{NATIVE_TOOLS}}${{SEP}}${{JAVA16}}"
            - jbosstools.test.jre.7="${{NATIVE_TOOLS}}${{SEP}}${{JAVA17}}"
            - jbosstools.test.jre.8="${{NATIVE_TOOLS}}${{SEP}}${{JAVA18}}"
          pom: ${{WORKSPACE}}/sources/pom.xml
      - maven-target:
          goals: "{ci-maven-flags} org.apache.maven.plugins:maven-dependency-plugin:2.9:unpack" #TODO: should it have all MAVEN_FLAGS ?
          maven-version: maven-3.2.5
          private-repository: true
          properties:
            - artifact=org.jboss.tools.releng:jbosstools-releng-publish:4.3.0.Alpha1-SNAPSHOT:zip
            - outputDirectory=${{WORKSPACE}}/sources
            - trimVersion=true
            - mdep.stripClassifier=true
            - mdep.stripVersion=true
      # Commented out since this is not portable nor possible to run in an isolated way
      #- shell: |
      #          cd ${{WORKSPACE}}/sources/
      #          export skipRevisionCheckWhenPublishing=${{skipRevisionCheckWhenPublishing}}
      #          . publish/publish.sh
      #- maven-target:
      #    goals: deploy ${{MAVEN_FLAGS}}
      #    maven-version: maven-3.2.5
      #    pom: ${{WORKSPACE}}/sources/site/pom.xml
      #    private-repository: true
      #    properties:
      #      - download.cache.directory={download-cache}
      #      - JOB_NAME=${{JOB_NAME}}
      #      - BUILD_ID=${{BUILD_ID}}
      #      - BUILD_NUMBER=${{BUILD_NUMBER}}
      #      - skipPrivateRequirements=false
      #      - jbosstools.test.jre.5="${{NATIVE_TOOLS}}${{SEP}}${{JAVA15}}" 
      #      - jbosstools.test.jre.6="${{NATIVE_TOOLS}}${{SEP}}${{JAVA16}}"
      #     - jbosstools.test.jre.7="${{NATIVE_TOOLS}}${{SEP}}${{JAVA17}}"
      #      - jbosstools.test.jre.8="${{NATIVE_TOOLS}}${{SEP}}${{JAVA18}}"
      - maven-target:
          goals: verify ${{MAVEN_FLAGS}} -DTARGET_PLATFORM_VERSION=${{TARGET_PLATFORM_VERSION_MAXIMUM}}
          maven-version: maven-3.2.5
          java-opts: 
            - "{jvm-memory}"
          pom: ${{WORKSPACE}}/sources/{tests-folder}/pom.xml
          private-repository: true
          properties:
            - maven.test.failure.ignore=true
            - download.cache.directory={download-cache}
            - JOB_NAME=${{JOB_NAME}}
            - BUILD_ID=${{BUILD_ID}}
            - BUILD_NUMBER=${{BUILD_NUMBER}}
            - skipPrivateRequirements=false
            - jbosstools.test.jre.5="${{NATIVE_TOOLS}}${{SEP}}${{JAVA15}}" 
            - jbosstools.test.jre.6="${{NATIVE_TOOLS}}${{SEP}}${{JAVA16}}"
            - jbosstools.test.jre.7="${{NATIVE_TOOLS}}${{SEP}}${{JAVA17}}"
            - jbosstools.test.jre.8="${{NATIVE_TOOLS}}${{SEP}}${{JAVA18}}"
    publishers:
      - archive:
          artifacts: >
            results/*/all/*Update*.zip,sources/*/target/jacoco.exec,
            sources/*/*tests/*/target/work/configuration/*.log,
            sources/*/*tests/*/target/work/data/.metadata/*.log, 
            sources/target/coverage-report/** 
          latest-only: true
      - junit:
          results: "sources/*/*tests/*/target/surefire-reports/TEST-*.xml"
          keep-long-stdio: false
      - description-setter:
          regexp: "BUILD_DESCRIPTION='(.+)'"
          description: "\\1"
      - email:
          recipients: "{component-responsible} jbosstools-builds@lists.jboss.org"
          send-to-individuals: true
      - build-publisher:
          name: ""
          publish-unstable-builds: true
          publish-failed-builds: false
          
    wrappers:
      - timeout:
          timeout: 120




